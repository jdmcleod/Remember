name: "CI"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      CI: true
      RAILS_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Store built assets
        uses: actions/upload-artifact@v4
        with:
          name: public-assets
          path: app/assets/builds

  model_test:
    name: Ruby Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: setup
    env:
      CI: true
      RAILS_ENV: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: XXXXXXXXXXX
      ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY: XXXXXXXXXXX
      ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT: XXXXXXXXXXX

    services:
      postgres:
        image: postgres:16
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn

      - name: Run Yarn Install
        run: yarn install --frozen-lockfile

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup database
        run: |
          bundle exec rake db:setup
          bundle exec rake db:test:prepare

      - name: Run non-system tests
        run: bundle exec rspec --exclude-pattern "spec/system/**/*_spec.rb" --format documentation --format RspecJunitFormatter --out tmp/rspec.xml

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: log

  system_test:
    name: System Tests
    runs-on: ubuntu-latest-16-cores
    timeout-minutes: 20
    needs: setup
    env:
      CI: true
      RAILS_ENV: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: XXXXXXXXXXX
      ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY: XXXXXXXXXXX
      ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT: XXXXXXXXXXX

    services:
      postgres:
        image: postgres:16
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Retrieve built assets
        uses: actions/download-artifact@v4
        with:
          name: public-assets
          path: app/assets/builds

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn

      - name: Setup vips
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips

      - name: Load previous turbo test runtime stats
        id: restore-parallel-spec
        uses: actions/cache@v4
        with:
          path: tmp/turbo_rspec_runtime.log
          key: ${{ runner.os }}-parallel-spec-runtimes-${{ github.sha }}_${{ github.run_attempt }}
          restore-keys: ${{ runner.os }}-parallel-spec-runtimes-

      - name: Setup parallel databases
        shell: bash
        run: bundle exec rake environment parallel:setup

      - name: Execute tests
        shell: bash
        run: bundle exec parallel_rspec --verbose-command spec/system

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: tmp/capybara

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: system-logs
          path: log
