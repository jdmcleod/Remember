- during_event = @event_dates&.include?(day.date)

- event = during_event ? @events.contains_date(day.date).first : nil
- day_classes = class_names('day--current': day.date.today?, 'day--future': day.date > Date.current)
- wrapper_style = event.present? && event.decorator.blank? ? "background-color: #{event&.color}" : nil

div class=day.wrapper_class(event) style=wrapper_style
  - if event.present? && event.single_day? && event.decorator.present?
    = image_tag "#{event.decorator}.svg", class: 'day-decoration-image'

  - if event.present? && day.date == event.start_date && event.decorator.blank?
    = modal_link_to year_event_path(month.year, event) do
      .event-handle style=wrapper_style
        = icon(event.icon_name, classes: 'icon--small', color: 'neutral-plus-max')

  button.day class=day_classes data-day-popup-target="day" data-action='click->day-popup#show' data-date=day.date.strftime("%Y-%-m-%-d") data-testid="day-#{day.id}"
    = render 'years/day_image', day: day

  = render partial: 'years/day_badges', locals: { day: day }
